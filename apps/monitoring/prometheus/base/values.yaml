#nameOverride: "k8s"
alertmanager:
  tls:
    enabled: false
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - alertmanager.localhost
    paths:
      - /
  config:
    receivers:
      # TODO: Add email receivers here.
      - name: "null"
  route:
    group_by: ['job']
    group_wait: 30s
    group_interval: 5m
    repeat_interval: 1h
    receiver: email
    routes:
    - match:
        alertname: Watchdog
      receiver: 'null'
    - match:
        alertname: CPUThrottlingHigh
      receiver: 'null'
    - match:
        alertname: KubeMemoryOvercommit
      receiver: 'null'
    - match:
        alertname: KubeCPUOvercommit
      receiver: 'null'
    - match:
        alertname: KubeletTooManyPods
      receiver: 'null'

    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      # Apply inhibition if the alertname is the same.
      equal: ['alertname', 'namespace']

  alertmanagerSpec:
    resources:
      limits:
        cpu: 500m
        memory: 64Mi
      requests:
        cpu: 25m
        memory: 32Mi
    storage:
      volumeClaimTemplate:
        metadata:
          labels:
            storage: prometheus
        spec:
          storageClassName: standard
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi
prometheus:
  resources:
    limits:
      cpu: "1"
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  tls:
    enabled: false
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - prometheus.localhost
    paths:
      - /
  prometheusSpec:
    retention: 10d
    retentionSize: 1GB
    # Allow ServiceMonitors/PodMonitors from any namespace
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    storageSpec:
      volumeClaimTemplate:
        metadata:
          labels:
            storage: prometheus
        spec:
          storageClassName: standard
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 2Gi


grafana:
  tls:
    enabled: false
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - grafana.localhost
    path: /
  persistence:
    enabled: true
  plugins:
    - grafana-piechart-panel
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 75

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Alertmanager
        type: alertmanager
        url: http://prometheus-alertmanager
        uid: alertmanager
        access: proxy
        jsonData:
          implementation: prometheus
      - name: Loki
        uid: loki
        type: loki
        access: proxy
        url: http://loki-stack:3100
        version: 1
        jsonData:
          alertmanagerUid: alertmanager
          maxLines: 5000
          timeout: "60"
      - name: Prometheus
        type: prometheus
        url: http://prometheus-server
        access: proxy
        isDefault: true
        jsonData:
          manageAlerts: true
          alertmanagerUid: alertmanager
  notifiers:
    notifiers.yaml:
      notifiers:
        - name: prometheus-alertmanager
          type: prometheus-alertmanager
          uid: prometheus-alertmanager
          org_id: 1
          is_default: true
          settings:
            url: http://prometheus-alertmanager
      delete_notifiers: []


  sidecar:
    plugins:
      enabled: true
    notifiers:
      enabled: false
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
      folder: /var/lib/grafana/dashboards/external
      folderAnnotation: grafana.diegoluisi.eti.br/dashboard-folder
#      searchNamespace: ALL
      provider:
        disableDelete: false
        allowUiUpdates: true
        foldersFromFilesStructure: true
    datasources:
      enabled: false
      label: grafana_datasource
      labelValue: "1"

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: 'Kubernetes Dashboards'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
      - name: 'alertmanager'
        orgId: 1
        folder: 'Alertmanager Dashboards'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/alertmanager
prometheusOperator:
  admissionWebhooks:
    enabled: false
  tls:
    enabled: false

# Disable etcd monitoring. See https://github.com/cablespaghetti/k3s-monitoring/issues/4
kubeEtcd:
  enabled: false

# Disable kube-controller-manager and kube-scheduler monitoring. See https://github.com/cablespaghetti/k3s-monitoring/issues/2
kubeControllerManager:
  enabled: false
kubeScheduler:
  enabled: false